// This example loads the GoJS library, creates a Diagram with a layout and prints the JSON results,

// Reference GoJS. This assumes its in the same directory as this script:
require('./go.js');

var $ = go.GraphObject.make;  // for conciseness in defining templates

myDiagram = $(go.Diagram, '', // No DIV
              {
                viewSize: new go.Size(400,400), // Set this property in DOM-less environments
                layout: $(go.LayeredDigraphLayout),
                'animationManager.isEnabled': false
              });

// define a simple Node template
myDiagram.nodeTemplate =
  $(go.Node, 'Auto',
    new go.Binding('location', 'loc', go.Point.Parse).makeTwoWay(go.Point.Stringify),
    $(go.Shape, 'RoundedRectangle', { strokeWidth: 0},
      // Shape.fill is bound to Node.data.color
      new go.Binding('fill', 'color')),
    $(go.TextBlock,
      { margin: 8 },  // some room around the text
      // TextBlock.text is bound to Node.data.key
      new go.Binding('text', 'key'))
  );

// After the layout, output results:
myDiagram.addDiagramListener('InitialLayoutCompleted', function() {
  console.log(myDiagram.model.toJSON());
});

// load a model:
myDiagram.model = new go.GraphLinksModel(
[
  { key: 'Alpha', color: 'lightblue' },
  { key: 'Beta', color: 'orange' },
  { key: 'Gamma', color: 'lightgreen' },
  { key: 'Delta', color: 'pink' }
],
[
  { from: 'Alpha', to: 'Beta' },
  { from: 'Alpha', to: 'Gamma' },
  { from: 'Beta', to: 'Beta' },
  { from: 'Gamma', to: 'Delta' },
  { from: 'Delta', to: 'Alpha' }
]);
